{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "4490313919479303254"
    }
  },
  "parameters": {
    "tags": {
      "type": "object"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetAddressPrefix": {
      "type": "string"
    },
    "subnets": {
      "type": "array"
    },
    "vnetName": {
      "type": "string"
    },
    "devopsConfig": {
      "type": "object",
      "metadata": {
        "description": "DevOps agent configuration"
      }
    },
    "lawsid": {
      "type": "string"
    },
    "vnetId": {
      "type": "string",
      "metadata": {
        "description": "AKS configuration"
      }
    },
    "aksSubnetId": {
      "type": "string"
    },
    "prefix": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "acrName": {
      "type": "string",
      "defaultValue": "memedevacr01"
    },
    "acrResourceGroup": {
      "type": "string",
      "defaultValue": "meme-dev-rg"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "meme-dev-keyvlt-01"
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "meme-dev-rg"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vNetDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnets": {
            "value": "[parameters('subnets')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "3645226966529266519"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vnetAddressPrefix": {
              "type": "string"
            },
            "subnets": {
              "type": "array"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-05-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('subnets'))]",
                    "input": {
                      "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "subnetIds": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('subnets'))]",
                "input": {
                  "name": "[parameters('subnets')[copyIndex()].name]",
                  "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "devopsAgentDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('devopsConfig').vmName]"
          },
          "vmSize": {
            "value": "[parameters('devopsConfig').vmSize]"
          },
          "adminUsername": {
            "value": "[parameters('devopsConfig').adminUsername]"
          },
          "sshPublicKey": {
            "value": "[parameters('devopsConfig').sshPublicKey]"
          },
          "subnetId": {
            "value": "/subscriptions/0cc20e92-7212-41e7-bf3f-2ebb8b14dcfb/resourceGroups/meme-dev-rg/providers/Microsoft.Network/virtualNetworks/meme-dev-vnet/subnets/meme-dev-mgmt-subnet"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "16852744354147715150"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "sshPublicKey": {
              "type": "securestring"
            },
            "subnetId": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "Dynamic"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-jammy",
                    "sku": "22_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aks-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clusterName": {
            "value": "[format('{0}-{1}-aks', parameters('prefix'), parameters('environment'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetId": {
            "value": "[parameters('vnetId')]"
          },
          "aksSubnetId": {
            "value": "[parameters('aksSubnetId')]"
          },
          "keyVaultId": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroup')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
          },
          "acrId": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('acrResourceGroup')), 'Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[parameters('lawsid')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "11996158659906115241"
            }
          },
          "parameters": {
            "clusterName": {
              "type": "string",
              "metadata": {
                "description": "The name of the AKS cluster"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the AKS cluster"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the VNet containing the subnets"
              }
            },
            "aksSubnetId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the subnet where AKS nodes will be deployed"
              }
            },
            "keyVaultId": {
              "type": "string",
              "defaultValue": "/subscriptions/0cc20e92-7212-41e7-bf3f-2ebb8b14dcfb/resourceGroups/meme-dev-rg/providers/Microsoft.KeyVault/vaults/meme-dev-keyvlt-01",
              "metadata": {
                "description": "The ID of the existing Key Vault"
              }
            },
            "acrId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the existing Azure Container Registry"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the existing Log Analytics workspace"
              }
            },
            "serviceCidr": {
              "type": "string",
              "defaultValue": "172.16.0.0/16",
              "metadata": {
                "description": "The service CIDR for kubernetes services"
              }
            },
            "dnsServiceIP": {
              "type": "string",
              "defaultValue": "172.16.0.10",
              "metadata": {
                "description": "The DNS service IP address"
              }
            }
          },
          "variables": {
            "systemNodePoolName": "systempool",
            "userNodePoolName": "userpool",
            "privateDnsZoneName": "[format('privatelink.{0}.azmk8s.io', parameters('location'))]",
            "vnetName": "[split(parameters('vnetId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('vnetName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2023-07-02-preview",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "kubernetesVersion": "1.30.7",
                "dnsPrefix": "[format('{0}-dns', parameters('clusterName'))]",
                "enableRBAC": true,
                "apiServerAccessProfile": {
                  "enablePrivateCluster": true,
                  "privateDNSZone": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                  "enablePrivateClusterPublicFQDN": false
                },
                "networkProfile": {
                  "networkPlugin": "azure",
                  "networkPolicy": "azure",
                  "loadBalancerSku": "Standard",
                  "outboundType": "userDefinedRouting",
                  "serviceCidr": "[parameters('serviceCidr')]",
                  "dnsServiceIP": "[parameters('dnsServiceIP')]",
                  "loadBalancerProfile": {
                    "managedOutboundIPs": {
                      "count": 1
                    }
                  }
                },
                "autoUpgradeProfile": {
                  "upgradeChannel": "stable",
                  "nodeOSUpgradeChannel": "NodeImage"
                },
                "securityProfile": {
                  "defender": {
                    "logAnalyticsWorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]",
                    "securityMonitoring": {
                      "enabled": true
                    }
                  },
                  "workloadIdentity": {
                    "enabled": true
                  },
                  "imageCleaner": {
                    "enabled": true,
                    "intervalHours": 48
                  }
                },
                "oidcIssuerProfile": {
                  "enabled": true
                },
                "aadProfile": {
                  "managed": true,
                  "enableAzureRBAC": true
                },
                "agentPoolProfiles": [
                  {
                    "name": "[variables('systemNodePoolName')]",
                    "count": 3,
                    "vmSize": "standard_d4s_v3",
                    "mode": "System",
                    "osType": "Linux",
                    "osSKU": "Ubuntu",
                    "maxPods": 110,
                    "vnetSubnetID": "[parameters('aksSubnetId')]",
                    "enableAutoScaling": false,
                    "type": "VirtualMachineScaleSets",
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ]
                  },
                  {
                    "name": "[variables('userNodePoolName')]",
                    "count": 3,
                    "vmSize": "standard_d8s_v3",
                    "mode": "User",
                    "osType": "Linux",
                    "osSKU": "Ubuntu",
                    "maxPods": 110,
                    "vnetSubnetID": "[parameters('aksSubnetId')]",
                    "enableAutoScaling": true,
                    "minCount": 3,
                    "maxCount": 5,
                    "type": "VirtualMachineScaleSets",
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ]
                  }
                ],
                "addonProfiles": {
                  "azureKeyvaultSecretsProvider": {
                    "enabled": true,
                    "config": {
                      "enableSecretRotation": "true"
                    }
                  },
                  "azurepolicy": {
                    "enabled": true
                  },
                  "omsagent": {
                    "enabled": true,
                    "config": {
                      "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsWorkspaceId')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), parameters('acrId'), 'acrpull')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2023-07-02-preview', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), parameters('keyVaultId'), 'secrets-user')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2023-07-02-preview', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
              ]
            }
          ],
          "outputs": {
            "clusterName": {
              "type": "string",
              "value": "[parameters('clusterName')]"
            },
            "clusterIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2023-07-02-preview', 'full').identity.principalId]"
            },
            "privateDnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "keyVaultResourceId": {
      "type": "string",
      "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroup')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
    },
    "acrResourceId": {
      "type": "string",
      "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('acrResourceGroup')), 'Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
    },
    "aksClusterName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-deployment'), '2022-09-01').outputs.clusterName.value]"
    },
    "aksIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-deployment'), '2022-09-01').outputs.clusterIdentityPrincipalId.value]"
    }
  }
}